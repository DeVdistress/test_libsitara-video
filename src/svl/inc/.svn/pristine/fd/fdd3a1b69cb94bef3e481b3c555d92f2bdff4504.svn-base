//
//  video_display.h
//
//  Created on: 22 сент. 2020 г.'
//	Author: devdistress
#include <kms++/kms++.h>
#include <kms++util/kms++util.h>

#include <thread>
#include <atomic>
#include <memory>

#include "videoenclib.h"

#pragma once
namespace svl
{
	class VideoDisplay
	{

		std::unique_ptr<std::thread> 		ph					{ nullptr };
		VideoEncLib::AbstractFrameSource 	*ptr_frameSource	{ nullptr };
		std::atomic<bool> 					was_init			{ false   };
		std::atomic<bool> 					was_start			{ false   };
		std::atomic<bool> 					need_stop			{ false   };
		std::atomic<bool> 					displayed			{ false   };

		void threadOfVideoDisplay(VideoEncLib::AbstractFrameSource *ptr);

	public:
		VideoDisplay (VideoEncLib::AbstractFrameSource* frame_source);
//		void setViewRect (int left,
//						  int top,
//						  int width,
//						  int height);
//
		void start();
		void stop()		{ need_stop = true; }
		bool isStart()	{ return was_start; }

		void on ()		{ displayed = true; }
		void off ()		{ displayed = false;}
		bool isOn ()	{ return displayed; }
	};
}

